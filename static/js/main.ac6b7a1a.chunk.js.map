{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setReverse","visibleGoods","goods","sortingField","isReverse","sortedGoods","sort","good1","good2","localeCompare","length","reverse","handleSort","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SAoBbC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAtBW,SAACC,EAAOC,EAAcC,GACvC,IAAMC,EAAW,YAAOH,GAcxB,OAZIC,IAAiBV,GACnBY,EAAYC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGrDL,IAAiBT,GACnBW,EAAYC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAGtDN,GACFC,EAAYM,UAGPN,EAOcO,CAAWpB,EAAiBK,EAAWE,GAO5D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAcJ,IAG5BuB,QAAS,kBAAMlB,EAAaL,IAN9B,iCAWA,wBACEqB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAcH,IAE5BsB,QAAS,kBAAMlB,EAAaJ,IAL9B,4BAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAahB,IAEfiB,QAAS,kBAAMhB,GAAYD,IAL7B,sBAUEF,GAAaE,IACf,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,kBA1CflB,EAAa,SACbE,GAAW,IAsCP,sBAWF,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCjGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac6b7a1a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nconst handleSort = (goods, sortingField, isReverse) => {\n  const sortedGoods = [...goods];\n\n  if (sortingField === SORT_FIELD_NAME) {\n    sortedGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (sortingField === SORT_FIELD_LENGTH) {\n    sortedGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReverse) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setReverse] = useState(false);\n\n  const visibleGoods = handleSort(goodsFromServer, sortField, isReversed);\n\n  const handleReset = () => {\n    setSortField('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_NAME,\n\n          })}\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => handleReset()}\n        >\n          Reset\n        </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}